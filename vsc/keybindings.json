// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+\\",
        "command": "runCommands",
        "args": {
            "commands": [
                // commands to run in sequence
            "editor.cpp.disableenabled",
            "editor.action.enableCppGlobally",
            ]
        }
    },
    {
        "key": "ctrl+[",
        "command": "editor.cancelOperation",
        "when": "cancellableOperation"
    },
    {
        "key": "ctrl+[",
        "command": "inlineChat.close",
        "when": "inlineChatHasProvider && inlineChatVisible"
    },
    {
        "key": "ctrl+[",
        "command": "inlineChat.close",
        "when": "inlineChatHasProvider && inlineChatVisible"
    },
    {
        "key": "ctrl+[",
        "command": "editor.action.inlineEdit.reject",
        "when": "inlineEditVisible && !editorReadonly"
    },
    {
        "key": "ctrl+[",
        "command": "editor.action.cancelGPT4WithCmdDelete",
        "when": "hadGPT4InlineCompletionRunning"
    },
    {
        "key": "ctrl+[",
        "command": "editor.action.inlineSuggest.hide",
    },
    {
        "key": "ctrl+[",
        "command": "closeFindWidget",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+[",
        "command": "extension.vim_ctrl+[",
        "when": "editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"
    },
    {
        "key": "ctrl+[",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+[",
        "when": "editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl",
        "command": "runCommands",
        "args": {
            "commands": [
                // commands to run in sequence
            "editor.cpp.disableenabled",
            "editor.action.enableCppGlobally",
            "extension.vim_ctrl+["
            ]
        }
    },
    {
        "key": "ctrl+w w",
        "command": "workbench.action.quickSwitchWindow"
    },
    {
        "key": "ctrl+w j",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+w j",
        // "command": "workbench.action.terminal.toggleTerminal",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+w h",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+w k",
        "command": "workbench.action.togglePanel",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+w k",
        "command": "workbench.action.closePanel",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+w l",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+w w",
        "command": "workbench.action.quickSwitchWindow"
    },
    {
        "key": "\\ c space",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus"
    },
    {
        "key": "\\ \\",
        "command": "type",
        "args": {
            "text": "\\"
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+h",
        "when": "editorTextFocus",
        "command": "runCommands",
        "args": {
            "commands": [
                // commands to run in sequence
            "scrollLeft",
            "scrollLeft",
            "scrollLeft",
            ]
        }
    },
    {
        "key": "ctrl+l",
        "when": "editorTextFocus",
        "command": "runCommands",
        "args": {
            "commands": [
                // commands to run in sequence
            "scrollRight",
            "scrollRight",
            "scrollRight",
            ]
        }
    },
]