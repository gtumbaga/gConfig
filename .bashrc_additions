#Easier Directory Listings with color
export CLICOLOR=1
export LSCOLORS="ExGxBxDxCxEgEdabagacad"
export LS_COLORS="di=94:ln=96:so=91:pi=93:ex=92:bd=94;46:cd=94;103:su=30;41:sg=30;46:tw=30;42:ow=30;103"
#disable quotes around filenames when LS-ing in ubuntu 18
export QUOTING_STYLE=literal

#force xterm so vim colors work when not in tmux too
export TERM=xterm-256color
export LANG=en_US.UTF-8
export EDITOR=vim

# -F applies classification indicators like slashes after a dir, @ for symlink, etc.
# -C column
# --color=auto ensure its using color for the ls
#alias ls='ls --color=auto -FC'
# mac doesn't support --color=auto, so lets try -G instead
alias ls='ls -GFC'
#check if --color will fail, and ignore it if it does.  this is needed so we don't error out on mac, but still get color on linux
ls --color=auto &> /dev/null && alias ls='ls --color=auto -FC' || alias ls='ls -GFC'
# -l list format
# -a all
# -h human readable file sizes (reads as kb, mb, gb, etc)
alias ll='ls -lahF'

#Command line speedtest
#alias speedtest='curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -'
#i removed this, and just saved the speedtest.py in the dir. no need to download it every time i want to use it.

#remind myself to use nvim
alias vi='echo use nvim or vim!'

#use grep to find files containing string, in current dir
gfind() {
    grep --exclude-dir=storage --exclude-dir=.git --exclude-dir=.next --exclude-dir=node_modules --exclude=vendor --exclude-dir=public -rni "." -e "$1"
}
#change the MOSH esc seq from ^ to something else
export MOSH_ESCAPE_KEY="~"

# ABILITY TO CHANGE TAB TITLE, WORKS IN HYPER
function title() { echo -e "\033]0;${1:?please specify a title}\007" ; }

# Turn off that damn zsh message on macos.
# I personally still like bash.
export BASH_SILENCE_DEPRECATION_WARNING=1

#git visual tree view similar to source tree
alias treeview='git log --graph --pretty="%C(red)%h %C(white)-%C(yellow)%d %C(white)%s %C(green)(%cr) %C(bold blue)<%an>"'
alias dc-build='docker-compose build --no-cache && yes | docker image prune'
alias dc-up='docker-compose up --force-recreate'

#set tab autocomplete to ingore case
bind 'set completion-ignore-case on'

#CUSTOM PROMPT
# get current branch in git repo
function parse_git_branch() {
    BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    if [ ! "${BRANCH}" == "" ]
    then
        #STAT=`parse_git_dirty`
        #echo "[${BRANCH}${STAT}]"
        echo "[${BRANCH}]"
    else
        echo ""
    fi
}
#the prompt, formatted
#export PS1="\n\[\e[35m\][\w]\[\e[m\] \[\e[36m\]\`parse_git_branch\`\[\e[m\]\n\[\e[33m\]<<\u\[\e[m\]@\[\e[33m\]\h>>\[\e[m\] --> "
# not sure why, but i had to add the extra color escape at the end of the prompt,
# because it was messing up on the new bash 5.2.15(1)-release that i was using on my m1pro mac
export PS1="\n\[\e[35m\][\w]\[\e[m\] \[\e[36m\]\`parse_git_branch\`\[\e[m\]\n\[\e[33m\]<<\u\[\e[m\]@\[\e[33m\]\h>>\[\e[m\] --> \[\e[m\]"
#export PS1="\n[\w] \`parse_git_branch\`\n<<\u@\h>> --> "
#
#
# color start
# \[\e[34m\]
#
# color end
# \[\e[m\]

